//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

// 
// Ce code source a été automatiquement généré par xsd, Version=4.8.3928.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
[System.Xml.Serialization.XmlRootAttribute("Ident", Namespace="http://www.siemens.com/automation/2010/IECPL", IsNullable=false)]
public partial class IdentType {
    
    private XRefItemType[] crossRefInfoField;
    
    private AccessType accessField;
    
    private string nameField;
    
    private string scopeField;
    
    private int refIdField;
    
    private bool refIdFieldSpecified;
    
    private string versionField;
    
    private string failSafeField;
    
    private long identStateField;
    
    private bool identStateFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("XRefItem", IsNullable=false)]
    public XRefItemType[] CrossRefInfo {
        get {
            return this.crossRefInfoField;
        }
        set {
            this.crossRefInfoField = value;
        }
    }
    
    /// <remarks/>
    public AccessType Access {
        get {
            return this.accessField;
        }
        set {
            this.accessField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Scope {
        get {
            return this.scopeField;
        }
        set {
            this.scopeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RefId {
        get {
            return this.refIdField;
        }
        set {
            this.refIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RefIdSpecified {
        get {
            return this.refIdFieldSpecified;
        }
        set {
            this.refIdFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FailSafe {
        get {
            return this.failSafeField;
        }
        set {
            this.failSafeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public long IdentState {
        get {
            return this.identStateField;
        }
        set {
            this.identStateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IdentStateSpecified {
        get {
            return this.identStateFieldSpecified;
        }
        set {
            this.identStateFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class XRefItemType {
    
    private int uIdField;
    
    private string usageField;
    
    private int netIdField;
    
    private bool netIdFieldSpecified;
    
    private int lineNoField;
    
    private int instructionField;
    
    private string nameField;
    
    private string xRefHiddenField;
    
    public XRefItemType() {
        this.lineNoField = 0;
        this.instructionField = 0;
        this.nameField = "";
        this.xRefHiddenField = "false";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int UId {
        get {
            return this.uIdField;
        }
        set {
            this.uIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Usage {
        get {
            return this.usageField;
        }
        set {
            this.usageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int NetId {
        get {
            return this.netIdField;
        }
        set {
            this.netIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NetIdSpecified {
        get {
            return this.netIdFieldSpecified;
        }
        set {
            this.netIdFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int LineNo {
        get {
            return this.lineNoField;
        }
        set {
            this.lineNoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int Instruction {
        get {
            return this.instructionField;
        }
        set {
            this.instructionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute("")]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute("false")]
    public string XRefHidden {
        get {
            return this.xRefHiddenField;
        }
        set {
            this.xRefHiddenField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class EmptyIdentType {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class NamedValueTypeDefaultValueType {
    
    private string sourceDefaultValueField;
    
    private string typeField;
    
    private string formatField;
    
    private string valueField;
    
    private string valueStringField;
    
    private string formatFlagsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SourceDefaultValue {
        get {
            return this.sourceDefaultValueField;
        }
        set {
            this.sourceDefaultValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Format {
        get {
            return this.formatField;
        }
        set {
            this.formatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ValueString {
        get {
            return this.valueStringField;
        }
        set {
            this.valueStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FormatFlags {
        get {
            return this.formatFlagsField;
        }
        set {
            this.formatFlagsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class NamedValueTypeType {
    
    private NamedValueTypeDefaultValueType defaultValueField;
    
    private string typeField;
    
    private int typeRIdField;
    
    private string accessQualifierField;
    
    /// <remarks/>
    public NamedValueTypeDefaultValueType DefaultValue {
        get {
            return this.defaultValueField;
        }
        set {
            this.defaultValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int TypeRId {
        get {
            return this.typeRIdField;
        }
        set {
            this.typeRIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AccessQualifier {
        get {
            return this.accessQualifierField;
        }
        set {
            this.accessQualifierField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class IndirectDBAccessType {
    
    private AccessObjectType[] accessObjectField;
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private uint absOffsetField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AccessObject")]
    public AccessObjectType[] AccessObject {
        get {
            return this.accessObjectField;
        }
        set {
            this.accessObjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint AbsOffset {
        get {
            return this.absOffsetField;
        }
        set {
            this.absOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class AccessObjectType {
    
    private IdentType[] identField;
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private TypeDataFormat_T aTDFField;
    
    private bool aTDFFieldSpecified;
    
    private string aTDField;
    
    private string nameField;
    
    private string typeField;
    
    private string arrayTypeField;
    
    private string derefFlagsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Ident")]
    public IdentType[] Ident {
        get {
            return this.identField;
        }
        set {
            this.identField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T ATDF {
        get {
            return this.aTDFField;
        }
        set {
            this.aTDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ATDFSpecified {
        get {
            return this.aTDFFieldSpecified;
        }
        set {
            this.aTDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ATD {
        get {
            return this.aTDField;
        }
        set {
            this.aTDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ArrayType {
        get {
            return this.arrayTypeField;
        }
        set {
            this.arrayTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DerefFlags {
        get {
            return this.derefFlagsField;
        }
        set {
            this.derefFlagsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public enum TypeDataFormat_T {
    
    /// <remarks/>
    OST,
    
    /// <remarks/>
    SPLT,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class ReferencedIdentType {
    
    private IdentType identField;
    
    /// <remarks/>
    public IdentType Ident {
        get {
            return this.identField;
        }
        set {
            this.identField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class ReferenceOperandType {
    
    private ReferencedIdentType referencedIdentField;
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    /// <remarks/>
    public ReferencedIdentType ReferencedIdent {
        get {
            return this.referencedIdentField;
        }
        set {
            this.referencedIdentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class DirectTypeType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private uint typeRIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint TypeRId {
        get {
            return this.typeRIdField;
        }
        set {
            this.typeRIdField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FBTBlockType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypeBlockType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DepDBBlockType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AufDBBlockType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MTHBlockType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CBBlockType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(OBBlockType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FCBlockType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FBBlockType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class TypeOperandType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private uint blockNumberField;
    
    private string blockTypeField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    private string structureModifiedTSField;
    
    private string trackingGuidField;
    
    private string versionIdField;
    
    private string typeObjectIdField;
    
    private string hasNamespaceField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint BlockNumber {
        get {
            return this.blockNumberField;
        }
        set {
            this.blockNumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string BlockType {
        get {
            return this.blockTypeField;
        }
        set {
            this.blockTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string StructureModifiedTS {
        get {
            return this.structureModifiedTSField;
        }
        set {
            this.structureModifiedTSField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TrackingGuid {
        get {
            return this.trackingGuidField;
        }
        set {
            this.trackingGuidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string VersionId {
        get {
            return this.versionIdField;
        }
        set {
            this.versionIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeObjectId {
        get {
            return this.typeObjectIdField;
        }
        set {
            this.typeObjectIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string HasNamespace {
        get {
            return this.hasNamespaceField;
        }
        set {
            this.hasNamespaceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class FBTBlockType : TypeOperandType {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class DataTypeBlockType : TypeOperandType {
    
    private string interfaceModifiedTSField;
    
    private string typeRIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string InterfaceModifiedTS {
        get {
            return this.interfaceModifiedTSField;
        }
        set {
            this.interfaceModifiedTSField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeRId {
        get {
            return this.typeRIdField;
        }
        set {
            this.typeRIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class DepDBBlockType : TypeOperandType {
    
    private string interfaceModifiedTSField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string InterfaceModifiedTS {
        get {
            return this.interfaceModifiedTSField;
        }
        set {
            this.interfaceModifiedTSField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class AufDBBlockType : TypeOperandType {
    
    private string interfaceModifiedTSField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string InterfaceModifiedTS {
        get {
            return this.interfaceModifiedTSField;
        }
        set {
            this.interfaceModifiedTSField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class MTHBlockType : TypeOperandType {
    
    private string parameterModifiedTSField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ParameterModifiedTS {
        get {
            return this.parameterModifiedTSField;
        }
        set {
            this.parameterModifiedTSField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class CBBlockType : TypeOperandType {
    
    private string parameterModifiedTSField;
    
    private string interfaceModifiedTSField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ParameterModifiedTS {
        get {
            return this.parameterModifiedTSField;
        }
        set {
            this.parameterModifiedTSField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string InterfaceModifiedTS {
        get {
            return this.interfaceModifiedTSField;
        }
        set {
            this.interfaceModifiedTSField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class OBBlockType : TypeOperandType {
    
    private string parameterModifiedTSField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ParameterModifiedTS {
        get {
            return this.parameterModifiedTSField;
        }
        set {
            this.parameterModifiedTSField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class FCBlockType : TypeOperandType {
    
    private string parameterModifiedTSField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ParameterModifiedTS {
        get {
            return this.parameterModifiedTSField;
        }
        set {
            this.parameterModifiedTSField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class FBBlockType : TypeOperandType {
    
    private string parameterModifiedTSField;
    
    private string interfaceModifiedTSField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ParameterModifiedTS {
        get {
            return this.parameterModifiedTSField;
        }
        set {
            this.parameterModifiedTSField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string InterfaceModifiedTS {
        get {
            return this.interfaceModifiedTSField;
        }
        set {
            this.interfaceModifiedTSField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class SimpleAccessType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    private string rangeField;
    
    private uint absOffsetField;
    
    private string accessModifierField;
    
    private string simpleAccessModifierField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Range {
        get {
            return this.rangeField;
        }
        set {
            this.rangeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint AbsOffset {
        get {
            return this.absOffsetField;
        }
        set {
            this.absOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AccessModifier {
        get {
            return this.accessModifierField;
        }
        set {
            this.accessModifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SimpleAccessModifier {
        get {
            return this.simpleAccessModifierField;
        }
        set {
            this.simpleAccessModifierField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class TemplateValue_Type {
    
    private string templateTypeField;
    
    private string nameField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TemplateType {
        get {
            return this.templateTypeField;
        }
        set {
            this.templateTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class ImplementationDetails_Type {
    
    private ImplementationDetails_TypeDetailsBlock detailsBlockField;
    
    private string typeField;
    
    /// <remarks/>
    public ImplementationDetails_TypeDetailsBlock DetailsBlock {
        get {
            return this.detailsBlockField;
        }
        set {
            this.detailsBlockField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class ImplementationDetails_TypeDetailsBlock {
    
    private string numberField;
    
    private string origPartNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string OrigPartName {
        get {
            return this.origPartNameField;
        }
        set {
            this.origPartNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class Location_Type {
    
    private string netIdField;
    
    private string uIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string NetId {
        get {
            return this.netIdField;
        }
        set {
            this.netIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string UId {
        get {
            return this.uIdField;
        }
        set {
            this.uIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class InstructionUsage_Type {
    
    private Location_Type[] locationField;
    
    private ImplementationDetails_Type[] implementationDetailsField;
    
    private TemplateValue_Type[] templateValueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Location")]
    public Location_Type[] Location {
        get {
            return this.locationField;
        }
        set {
            this.locationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ImplementationDetails")]
    public ImplementationDetails_Type[] ImplementationDetails {
        get {
            return this.implementationDetailsField;
        }
        set {
            this.implementationDetailsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TemplateValue")]
    public TemplateValue_Type[] TemplateValue {
        get {
            return this.templateValueField;
        }
        set {
            this.templateValueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class InstructionUsages_Type {
    
    private InstructionUsage_Type[] instructionUsageField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("InstructionUsage")]
    public InstructionUsage_Type[] InstructionUsage {
        get {
            return this.instructionUsageField;
        }
        set {
            this.instructionUsageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class TemplateParameterInfoType {
    
    private string nameField;
    
    private string minField;
    
    private string maxField;
    
    private string typeField;
    
    private string posField;
    
    private string visibleField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Pos {
        get {
            return this.posField;
        }
        set {
            this.posField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Visible {
        get {
            return this.visibleField;
        }
        set {
            this.visibleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class LibraryParameterType {
    
    private string nameField;
    
    private string sectionField;
    
    private string typeField;
    
    private string templateReferenceField;
    
    private string templateCardinalityField;
    
    private string interfaceFlagsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TemplateReference {
        get {
            return this.templateReferenceField;
        }
        set {
            this.templateReferenceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TemplateCardinality {
        get {
            return this.templateCardinalityField;
        }
        set {
            this.templateCardinalityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string InterfaceFlags {
        get {
            return this.interfaceFlagsField;
        }
        set {
            this.interfaceFlagsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class InstructionType {
    
    private LibraryParameterType[] parameterField;
    
    private TemplateParameterInfoType[] templateParameterInfoField;
    
    private InstructionUsages_Type instructionUsagesField;
    
    private string libraryObjIdField;
    
    private string versionIdField;
    
    private string needsInstanceField;
    
    private string compatibleVersionIdField;
    
    private string symbolInformationField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Parameter")]
    public LibraryParameterType[] Parameter {
        get {
            return this.parameterField;
        }
        set {
            this.parameterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TemplateParameterInfo")]
    public TemplateParameterInfoType[] TemplateParameterInfo {
        get {
            return this.templateParameterInfoField;
        }
        set {
            this.templateParameterInfoField = value;
        }
    }
    
    /// <remarks/>
    public InstructionUsages_Type InstructionUsages {
        get {
            return this.instructionUsagesField;
        }
        set {
            this.instructionUsagesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string LibraryObjId {
        get {
            return this.libraryObjIdField;
        }
        set {
            this.libraryObjIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string VersionId {
        get {
            return this.versionIdField;
        }
        set {
            this.versionIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string NeedsInstance {
        get {
            return this.needsInstanceField;
        }
        set {
            this.needsInstanceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string CompatibleVersionId {
        get {
            return this.compatibleVersionIdField;
        }
        set {
            this.compatibleVersionIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string SymbolInformation {
        get {
            return this.symbolInformationField;
        }
        set {
            this.symbolInformationField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(StructuredTagAccessType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiInstAccessType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(InterfaceAccessType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypeAccessType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GlobalAccessType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class SimaticStorageType {
    
    private AccessObjectType[] accessObjectField;
    
    private string accessModifierField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AccessObject")]
    public AccessObjectType[] AccessObject {
        get {
            return this.accessObjectField;
        }
        set {
            this.accessObjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AccessModifier {
        get {
            return this.accessModifierField;
        }
        set {
            this.accessModifierField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class StructuredTagAccessType : SimaticStorageType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private uint absOffsetField;
    
    private string rangeField;
    
    private string simpleAccessModifierField;
    
    private string uDTNameField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint AbsOffset {
        get {
            return this.absOffsetField;
        }
        set {
            this.absOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Range {
        get {
            return this.rangeField;
        }
        set {
            this.rangeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SimpleAccessModifier {
        get {
            return this.simpleAccessModifierField;
        }
        set {
            this.simpleAccessModifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string UDTName {
        get {
            return this.uDTNameField;
        }
        set {
            this.uDTNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class MultiInstAccessType : SimaticStorageType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private uint classicAbsOffsetField;
    
    private uint retainAbsOffsetField;
    
    private uint volatileAbsOffsetField;
    
    private uint absOffsetField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint ClassicAbsOffset {
        get {
            return this.classicAbsOffsetField;
        }
        set {
            this.classicAbsOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint RetainAbsOffset {
        get {
            return this.retainAbsOffsetField;
        }
        set {
            this.retainAbsOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint VolatileAbsOffset {
        get {
            return this.volatileAbsOffsetField;
        }
        set {
            this.volatileAbsOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint AbsOffset {
        get {
            return this.absOffsetField;
        }
        set {
            this.absOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class InterfaceAccessType : SimaticStorageType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private uint absOffsetField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint AbsOffset {
        get {
            return this.absOffsetField;
        }
        set {
            this.absOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class DataTypeAccessType : SimaticStorageType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private uint absOffsetField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint AbsOffset {
        get {
            return this.absOffsetField;
        }
        set {
            this.absOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class GlobalAccessType : SimaticStorageType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private uint dbNumberField;
    
    private string accessedAreaField;
    
    private uint absOffsetField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint DbNumber {
        get {
            return this.dbNumberField;
        }
        set {
            this.dbNumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AccessedArea {
        get {
            return this.accessedAreaField;
        }
        set {
            this.accessedAreaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint AbsOffset {
        get {
            return this.absOffsetField;
        }
        set {
            this.absOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class ExpressionType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private int sCL_UIdField;
    
    private int constantValueField;
    
    private bool constantValueFieldSpecified;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int SCL_UId {
        get {
            return this.sCL_UIdField;
        }
        set {
            this.sCL_UIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int ConstantValue {
        get {
            return this.constantValueField;
        }
        set {
            this.constantValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ConstantValueSpecified {
        get {
            return this.constantValueFieldSpecified;
        }
        set {
            this.constantValueFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(NamedValueType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class ConstantType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    private string formatField;
    
    private string valueField;
    
    private string valueStringField;
    
    private string formatFlagsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Format {
        get {
            return this.formatField;
        }
        set {
            this.formatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ValueString {
        get {
            return this.valueStringField;
        }
        set {
            this.valueStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FormatFlags {
        get {
            return this.formatFlagsField;
        }
        set {
            this.formatFlagsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class NamedValueType : ConstantType {
    
    private string namedValueTypeNameField;
    
    private int namedValueTypeRefIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string NamedValueTypeName {
        get {
            return this.namedValueTypeNameField;
        }
        set {
            this.namedValueTypeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int NamedValueTypeRefId {
        get {
            return this.namedValueTypeRefIdField;
        }
        set {
            this.namedValueTypeRefIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class ParameterType {
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private string nameField;
    
    private string sectionField;
    
    private string areaField;
    
    private string typeField;
    
    private string interfaceFlagsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Area {
        get {
            return this.areaField;
        }
        set {
            this.areaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string InterfaceFlags {
        get {
            return this.interfaceFlagsField;
        }
        set {
            this.interfaceFlagsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class BlockInterfaceInfoType {
    
    private ParameterType[] parameterField;
    
    private IdentType identField;
    
    private string parameterModifiedTSField;
    
    private string structureModifiedTSField;
    
    private string creationIdField;
    
    private string blockTypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Parameter")]
    public ParameterType[] Parameter {
        get {
            return this.parameterField;
        }
        set {
            this.parameterField = value;
        }
    }
    
    /// <remarks/>
    public IdentType Ident {
        get {
            return this.identField;
        }
        set {
            this.identField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ParameterModifiedTS {
        get {
            return this.parameterModifiedTSField;
        }
        set {
            this.parameterModifiedTSField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string StructureModifiedTS {
        get {
            return this.structureModifiedTSField;
        }
        set {
            this.structureModifiedTSField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string CreationId {
        get {
            return this.creationIdField;
        }
        set {
            this.creationIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string BlockType {
        get {
            return this.blockTypeField;
        }
        set {
            this.blockTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class AlarmType {
    
    private IdentType identField;
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private string blockParameterInfoNameField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    /// <remarks/>
    public IdentType Ident {
        get {
            return this.identField;
        }
        set {
            this.identField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string BlockParameterInfoName {
        get {
            return this.blockParameterInfoNameField;
        }
        set {
            this.blockParameterInfoNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class AddressType {
    
    private IdentType identField;
    
    private TypeDataFormat_T tDFField;
    
    private bool tDFFieldSpecified;
    
    private string tdField;
    
    private string typeField;
    
    private string typeNameField;
    
    private int rIdField;
    
    /// <remarks/>
    public IdentType Ident {
        get {
            return this.identField;
        }
        set {
            this.identField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TypeDataFormat_T TDF {
        get {
            return this.tDFField;
        }
        set {
            this.tDFField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TDFSpecified {
        get {
            return this.tDFFieldSpecified;
        }
        set {
            this.tDFFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TD {
        get {
            return this.tdField;
        }
        set {
            this.tdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RId {
        get {
            return this.rIdField;
        }
        set {
            this.rIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL")]
public partial class AccessType {
    
    private object itemField;
    
    private ItemChoiceType itemElementNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Address", typeof(AddressType))]
    [System.Xml.Serialization.XmlElementAttribute("Alarm", typeof(AlarmType))]
    [System.Xml.Serialization.XmlElementAttribute("AufDBBlock", typeof(AufDBBlockType))]
    [System.Xml.Serialization.XmlElementAttribute("BlockInterfaceInfo", typeof(BlockInterfaceInfoType))]
    [System.Xml.Serialization.XmlElementAttribute("CBBlock", typeof(CBBlockType))]
    [System.Xml.Serialization.XmlElementAttribute("Constant", typeof(ConstantType))]
    [System.Xml.Serialization.XmlElementAttribute("DataTypeAccess", typeof(DataTypeAccessType))]
    [System.Xml.Serialization.XmlElementAttribute("DataTypeBlock", typeof(DataTypeBlockType))]
    [System.Xml.Serialization.XmlElementAttribute("DepDBBlock", typeof(DepDBBlockType))]
    [System.Xml.Serialization.XmlElementAttribute("DirectType", typeof(DirectTypeType))]
    [System.Xml.Serialization.XmlElementAttribute("Expression", typeof(ExpressionType))]
    [System.Xml.Serialization.XmlElementAttribute("FBBlock", typeof(FBBlockType))]
    [System.Xml.Serialization.XmlElementAttribute("FBTBlock", typeof(FBTBlockType))]
    [System.Xml.Serialization.XmlElementAttribute("FCBlock", typeof(FCBlockType))]
    [System.Xml.Serialization.XmlElementAttribute("GlobalAccess", typeof(GlobalAccessType))]
    [System.Xml.Serialization.XmlElementAttribute("Ident", typeof(EmptyIdentType))]
    [System.Xml.Serialization.XmlElementAttribute("IndirectDBAccess", typeof(IndirectDBAccessType))]
    [System.Xml.Serialization.XmlElementAttribute("Instruction", typeof(InstructionType))]
    [System.Xml.Serialization.XmlElementAttribute("InterfaceAccess", typeof(InterfaceAccessType))]
    [System.Xml.Serialization.XmlElementAttribute("Label", typeof(object))]
    [System.Xml.Serialization.XmlElementAttribute("MTHBlock", typeof(MTHBlockType))]
    [System.Xml.Serialization.XmlElementAttribute("MultiInstanceAccess", typeof(MultiInstAccessType))]
    [System.Xml.Serialization.XmlElementAttribute("NamedValue", typeof(NamedValueType))]
    [System.Xml.Serialization.XmlElementAttribute("NamedValueType", typeof(NamedValueTypeType))]
    [System.Xml.Serialization.XmlElementAttribute("OBBlock", typeof(OBBlockType))]
    [System.Xml.Serialization.XmlElementAttribute("ReferenceOperand", typeof(ReferenceOperandType))]
    [System.Xml.Serialization.XmlElementAttribute("SimaticStorage", typeof(SimaticStorageType))]
    [System.Xml.Serialization.XmlElementAttribute("SimpleAccess", typeof(SimpleAccessType))]
    [System.Xml.Serialization.XmlElementAttribute("StructuredTagAccess", typeof(StructuredTagAccessType))]
    [System.Xml.Serialization.XmlElementAttribute("ThisBlock", typeof(object))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType ItemElementName {
        get {
            return this.itemElementNameField;
        }
        set {
            this.itemElementNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siemens.com/automation/2010/IECPL", IncludeInSchema=false)]
public enum ItemChoiceType {
    
    /// <remarks/>
    Address,
    
    /// <remarks/>
    Alarm,
    
    /// <remarks/>
    AufDBBlock,
    
    /// <remarks/>
    BlockInterfaceInfo,
    
    /// <remarks/>
    CBBlock,
    
    /// <remarks/>
    Constant,
    
    /// <remarks/>
    DataTypeAccess,
    
    /// <remarks/>
    DataTypeBlock,
    
    /// <remarks/>
    DepDBBlock,
    
    /// <remarks/>
    DirectType,
    
    /// <remarks/>
    Expression,
    
    /// <remarks/>
    FBBlock,
    
    /// <remarks/>
    FBTBlock,
    
    /// <remarks/>
    FCBlock,
    
    /// <remarks/>
    GlobalAccess,
    
    /// <remarks/>
    Ident,
    
    /// <remarks/>
    IndirectDBAccess,
    
    /// <remarks/>
    Instruction,
    
    /// <remarks/>
    InterfaceAccess,
    
    /// <remarks/>
    Label,
    
    /// <remarks/>
    MTHBlock,
    
    /// <remarks/>
    MultiInstanceAccess,
    
    /// <remarks/>
    NamedValue,
    
    /// <remarks/>
    NamedValueType,
    
    /// <remarks/>
    OBBlock,
    
    /// <remarks/>
    ReferenceOperand,
    
    /// <remarks/>
    SimaticStorage,
    
    /// <remarks/>
    SimpleAccess,
    
    /// <remarks/>
    StructuredTagAccess,
    
    /// <remarks/>
    ThisBlock,
}
